package com.zd.warehouse.business.model;

import java.util.ArrayList;
import java.util.List;

public class InboundDetailsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public InboundDetailsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andInboundIdIsNull() {
			addCriterion("inbound_id is null");
			return (Criteria) this;
		}

		public Criteria andInboundIdIsNotNull() {
			addCriterion("inbound_id is not null");
			return (Criteria) this;
		}

		public Criteria andInboundIdEqualTo(Integer value) {
			addCriterion("inbound_id =", value, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdNotEqualTo(Integer value) {
			addCriterion("inbound_id <>", value, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdGreaterThan(Integer value) {
			addCriterion("inbound_id >", value, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("inbound_id >=", value, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdLessThan(Integer value) {
			addCriterion("inbound_id <", value, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdLessThanOrEqualTo(Integer value) {
			addCriterion("inbound_id <=", value, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdIn(List<Integer> values) {
			addCriterion("inbound_id in", values, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdNotIn(List<Integer> values) {
			addCriterion("inbound_id not in", values, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdBetween(Integer value1, Integer value2) {
			addCriterion("inbound_id between", value1, value2, "inboundId");
			return (Criteria) this;
		}

		public Criteria andInboundIdNotBetween(Integer value1, Integer value2) {
			addCriterion("inbound_id not between", value1, value2, "inboundId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdIsNull() {
			addCriterion("goods_id is null");
			return (Criteria) this;
		}

		public Criteria andGoodsIdIsNotNull() {
			addCriterion("goods_id is not null");
			return (Criteria) this;
		}

		public Criteria andGoodsIdEqualTo(Integer value) {
			addCriterion("goods_id =", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdNotEqualTo(Integer value) {
			addCriterion("goods_id <>", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdGreaterThan(Integer value) {
			addCriterion("goods_id >", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("goods_id >=", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdLessThan(Integer value) {
			addCriterion("goods_id <", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
			addCriterion("goods_id <=", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdIn(List<Integer> values) {
			addCriterion("goods_id in", values, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdNotIn(List<Integer> values) {
			addCriterion("goods_id not in", values, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
			addCriterion("goods_id between", value1, value2, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
			addCriterion("goods_id not between", value1, value2, "goodsId");
			return (Criteria) this;
		}

		public Criteria andCountIsNull() {
			addCriterion("count is null");
			return (Criteria) this;
		}

		public Criteria andCountIsNotNull() {
			addCriterion("count is not null");
			return (Criteria) this;
		}

		public Criteria andCountEqualTo(Integer value) {
			addCriterion("count =", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountNotEqualTo(Integer value) {
			addCriterion("count <>", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountGreaterThan(Integer value) {
			addCriterion("count >", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("count >=", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountLessThan(Integer value) {
			addCriterion("count <", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountLessThanOrEqualTo(Integer value) {
			addCriterion("count <=", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountIn(List<Integer> values) {
			addCriterion("count in", values, "count");
			return (Criteria) this;
		}

		public Criteria andCountNotIn(List<Integer> values) {
			addCriterion("count not in", values, "count");
			return (Criteria) this;
		}

		public Criteria andCountBetween(Integer value1, Integer value2) {
			addCriterion("count between", value1, value2, "count");
			return (Criteria) this;
		}

		public Criteria andCountNotBetween(Integer value1, Integer value2) {
			addCriterion("count not between", value1, value2, "count");
			return (Criteria) this;
		}

		public Criteria andMoneyIsNull() {
			addCriterion("money is null");
			return (Criteria) this;
		}

		public Criteria andMoneyIsNotNull() {
			addCriterion("money is not null");
			return (Criteria) this;
		}

		public Criteria andMoneyEqualTo(Double value) {
			addCriterion("money =", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyNotEqualTo(Double value) {
			addCriterion("money <>", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyGreaterThan(Double value) {
			addCriterion("money >", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyGreaterThanOrEqualTo(Double value) {
			addCriterion("money >=", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyLessThan(Double value) {
			addCriterion("money <", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyLessThanOrEqualTo(Double value) {
			addCriterion("money <=", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyIn(List<Double> values) {
			addCriterion("money in", values, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyNotIn(List<Double> values) {
			addCriterion("money not in", values, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyBetween(Double value1, Double value2) {
			addCriterion("money between", value1, value2, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyNotBetween(Double value1, Double value2) {
			addCriterion("money not between", value1, value2, "money");
			return (Criteria) this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("price is null");
			return (Criteria) this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("price is not null");
			return (Criteria) this;
		}

		public Criteria andPriceEqualTo(Double value) {
			addCriterion("price =", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotEqualTo(Double value) {
			addCriterion("price <>", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThan(Double value) {
			addCriterion("price >", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("price >=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThan(Double value) {
			addCriterion("price <", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThanOrEqualTo(Double value) {
			addCriterion("price <=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceIn(List<Double> values) {
			addCriterion("price in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotIn(List<Double> values) {
			addCriterion("price not in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceBetween(Double value1, Double value2) {
			addCriterion("price between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotBetween(Double value1, Double value2) {
			addCriterion("price not between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andTaxRateIsNull() {
			addCriterion("tax_rate is null");
			return (Criteria) this;
		}

		public Criteria andTaxRateIsNotNull() {
			addCriterion("tax_rate is not null");
			return (Criteria) this;
		}

		public Criteria andTaxRateEqualTo(Double value) {
			addCriterion("tax_rate =", value, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateNotEqualTo(Double value) {
			addCriterion("tax_rate <>", value, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateGreaterThan(Double value) {
			addCriterion("tax_rate >", value, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateGreaterThanOrEqualTo(Double value) {
			addCriterion("tax_rate >=", value, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateLessThan(Double value) {
			addCriterion("tax_rate <", value, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateLessThanOrEqualTo(Double value) {
			addCriterion("tax_rate <=", value, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateIn(List<Double> values) {
			addCriterion("tax_rate in", values, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateNotIn(List<Double> values) {
			addCriterion("tax_rate not in", values, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateBetween(Double value1, Double value2) {
			addCriterion("tax_rate between", value1, value2, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxRateNotBetween(Double value1, Double value2) {
			addCriterion("tax_rate not between", value1, value2, "taxRate");
			return (Criteria) this;
		}

		public Criteria andTaxIsNull() {
			addCriterion("tax is null");
			return (Criteria) this;
		}

		public Criteria andTaxIsNotNull() {
			addCriterion("tax is not null");
			return (Criteria) this;
		}

		public Criteria andTaxEqualTo(Double value) {
			addCriterion("tax =", value, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxNotEqualTo(Double value) {
			addCriterion("tax <>", value, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxGreaterThan(Double value) {
			addCriterion("tax >", value, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxGreaterThanOrEqualTo(Double value) {
			addCriterion("tax >=", value, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxLessThan(Double value) {
			addCriterion("tax <", value, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxLessThanOrEqualTo(Double value) {
			addCriterion("tax <=", value, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxIn(List<Double> values) {
			addCriterion("tax in", values, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxNotIn(List<Double> values) {
			addCriterion("tax not in", values, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxBetween(Double value1, Double value2) {
			addCriterion("tax between", value1, value2, "tax");
			return (Criteria) this;
		}

		public Criteria andTaxNotBetween(Double value1, Double value2) {
			addCriterion("tax not between", value1, value2, "tax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxIsNull() {
			addCriterion("money_with_tax is null");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxIsNotNull() {
			addCriterion("money_with_tax is not null");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxEqualTo(Double value) {
			addCriterion("money_with_tax =", value, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxNotEqualTo(Double value) {
			addCriterion("money_with_tax <>", value, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxGreaterThan(Double value) {
			addCriterion("money_with_tax >", value, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxGreaterThanOrEqualTo(Double value) {
			addCriterion("money_with_tax >=", value, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxLessThan(Double value) {
			addCriterion("money_with_tax <", value, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxLessThanOrEqualTo(Double value) {
			addCriterion("money_with_tax <=", value, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxIn(List<Double> values) {
			addCriterion("money_with_tax in", values, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxNotIn(List<Double> values) {
			addCriterion("money_with_tax not in", values, "moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxBetween(Double value1, Double value2) {
			addCriterion("money_with_tax between", value1, value2,
					"moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andMoneyWithTaxNotBetween(Double value1, Double value2) {
			addCriterion("money_with_tax not between", value1, value2,
					"moneyWithTax");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table inbound_details
	 * @mbggenerated  Sat Jun 09 08:40:28 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inbound_details
     *
     * @mbggenerated do_not_delete_during_merge Thu Jun 07 08:22:18 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}